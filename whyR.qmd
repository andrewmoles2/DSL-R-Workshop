---
title: "Why learn R"
---

There are a lot of reasons why you should learn R, and it is very prevalent in academia, bioinformatics (analysis of biological data), data analyst and data scientist roles

A lot of LSE courses that involved statistics or data primarily use R. This is because R is a excellent tool for:

-   Statistics
-   Data handling (i.e. cleaning and manipulating data)
-   Visualisations, interactive graphics, applications, and dashboards
-   Reporting (i.e. academic writing as well as building websites)
-   Automation (such as automating an analysis)

R is an open-source tool, which means you do not need to buy a licence in order to use it, and is a popular programming language, as shown in the PYPL index from 2023

![PYPL index 2023](https://raw.githubusercontent.com/andrewmoles2/rTrainIntroduction/main/r-fundamentals-1/Images/PYPL_index_23.png){width="400" fig-align="center"}

## Easy to learn

A key advantage of R is that it is retentively easy to learn, especially in comparison with other programming languages used for data analysis like Python. A large part of this is due to R being designed to work with data, so it feels natural, and some of the excellent extensions that have been added to R over the years to make it more slick (great examples are the tidyverse and data.table packages). 

Further, there are the vast amount of online resources in forms of tutorials, blogs, online courses, people sharing code/examples and help available through online discussion forums like stackoverflow and slack.

Some of the best available resources to learn R are:

-   [R for Data Science book](https://r4ds.hadley.nz/) and the [first edition](https://r4ds.had.co.nz/) is still great
-   [R for Data Science slack channel](https://rfordatasci.com/) has great community support
-   [Codecademy](https://www.codecademy.com/learn/learn-r) R course
-   [R bloggers](https://www.r-bloggers.com/) collates blog posts about R. Some blogs I would recommend checking out are https://www.cedricscherer.com/, https://karaman.is/, https://djnavarro.net/, https://github.com/tashapiro/TidyTuesday, https://www.yan-holtz.com/blog.html, and https://albert-rapp.de/blog.html
-   For data visualisation ggplot2 is the go to tool, and the best way to learn it is to run through [this book](https://ggplot2-book.org/) and using the [R graph gallery](https://r-graph-gallery.com/)
-   For getting some open source data to start your own projects I would recommend the tidy Tuesday initiative. All dataset are hosted in [github](https://github.com/rfordatascience/tidytuesday).

## Some examples of R being awesome for Data visualisation

![Animated gif of rainfall and temperature changes over time in Australian cities](https://github.com/andrewmoles2/TidyTuesday/blob/master/Australia-fires-2020-01-07/Auz_Rain&Temp2.gif?raw=true){fig-alt="Animated gif of rainfall and temperature changes over time in Australian cities" fig-align="center" width="90%"}

![Regional map UK showing how each area is doing in terms of gender pay equality for each year data has existed, from 2017-2022](https://github.com/andrewmoles2/TidyTuesday/blob/master/paygap-2022-06-28/median_pay_diff_postcode_year.png?raw=true){fig-alt="Regional map showing how each area of the UK is doing in terms of gender pay equality for each year data has existed from 2017-2023. " fig-align="center" width="75%"}

::: {.callout-tip collapse="false"}
## Fun side note

This webpage was built using R. If you are interested, come to the workshops and chat to one of the instructors about it!
:::


```{r interactive, echo=FALSE, message=FALSE, warning=FALSE, fig.cap="Interactive graphic of Dr Who episodes IMDB rating by actor playing the Doctor", out.width='100%'}

# load libraries ----
library(tidyverse, warn.conflicts = FALSE)
library(ggiraph, warn.conflicts = FALSE)
library(ggimage, warn.conflicts = FALSE)

# load in the separate datasets ----
directors <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-11-23/directors.csv')
episodes <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-11-23/episodes.csv')

# make list of doctors per season ----
doctor <- c("Christopher Eccleston","David Tennant","David Tennant","David Tennant",
          "Matt Smith","Matt Smith","Matt Smith","Peter Capaldi","Peter Capaldi",
          "Peter Capaldi","Jodie Whittaker","Jodie Whittaker","Jodie Whittaker")
season <- 1:13
doctors <- data.frame(season,doctor)

# clean up missing season data on special episodes ----
episodes <- episodes %>%
  mutate(season_number = case_when(
      first_aired >= "2008-12-25" & first_aired <= "2010-01-01" ~ 4,
      first_aired >= "2013-11-23" & first_aired <= "2013-12-25" ~ 7,
      TRUE ~ season_number))

# make main data through joins ----
df_who <- left_join(episodes, directors, by = "story_number")
df_who <- left_join(df_who, doctors, by = c("season_number" = "season")) %>%
  mutate(director = factor(director),
         doctor = factor(doctor, levels = c("Christopher Eccleston", "David Tennant",
                                       "Matt Smith", "Peter Capaldi", "Jodie Whittaker")))
# set up palettes ----
pal <- c(
  "#B4301B", # dark red (CE)
  "#38631F", # dark green (DT)
  "#6A51A3", # purple (MS)
  "#0455EB", # vivid blue (PC)
  "#FFA62B" # vivid orange (JW)
)

# average rating and viewers + image path ----
df_who %>%
  group_by(doctor) %>%
  mutate(avg_dr_rating = mean(rating, na.rm = TRUE),
    avg_dr_viewers = mean(uk_viewers, na.rm = TRUE),
    avg_rating = mean(avg_dr_rating, na.rm = TRUE)) %>%
  ungroup() %>%
  mutate(image = case_when(
    doctor == "Peter Capaldi" ~ "https://raw.githubusercontent.com/andrewmoles2/TidyTuesday/master/dr-who-2021-11-23/dr-img/peter_c.png",
      doctor == "David Tennant" ~ "https://raw.githubusercontent.com/andrewmoles2/TidyTuesday/master/dr-who-2021-11-23/dr-img/david_t.png",
      doctor == "Matt Smith" ~ "https://raw.githubusercontent.com/andrewmoles2/TidyTuesday/master/dr-who-2021-11-23/dr-img/matt_s.png",
      doctor == "Jodie Whittaker" ~ "https://raw.githubusercontent.com/andrewmoles2/TidyTuesday/master/dr-who-2021-11-23/dr-img/jodie_w.png",
      doctor == "Christopher Eccleston" ~ "https://raw.githubusercontent.com/andrewmoles2/TidyTuesday/master/dr-who-2021-11-23/dr-img/chris_e.png"
  )) -> df_who

df_who %>%
  mutate(
    plot_text = paste("Episode", episode_number, "-", episode_title, "from season", season_number, "had", uk_viewers, "UK viewers")
    ) -> df_who

avg_who <- 
  df_who %>%
  group_by(doctor) %>%
  summarise(avg_dr_rating = mean(avg_dr_rating))

f3 <- "Avenir"

df_who %>%
  ggplot(aes(x = doctor, y = rating)) +
  geom_jitter_interactive(size = 7, width = 0.35, alpha = 0.8, hover_nearest = TRUE,
                          aes(colour = doctor, data_id = story_number,
                              tooltip = plot_text)) +
  geom_hline(aes(yintercept = mean(avg_rating)), 
             colour = "grey5", size = 1, linetype = 5) +
  geom_segment(aes(x = doctor, xend = doctor, y = mean(avg_rating), yend = avg_dr_rating),
               colour = "grey5", size = 1, linetype = 2) +
  geom_point(aes(x = doctor, y = avg_dr_rating), 
             size = 8, shape = 19, fill = "grey10", alpha = 0.8) +
#  geom_image(aes(x = doctor, y = avg_dr_rating, image = image), asp = 1.4) +
  geom_text(data = avg_who, aes(x = doctor, y = avg_dr_rating, label = round(avg_dr_rating, 1)), 
            family = f3, nudge_x = 0, colour = "grey95", size = 3) +
  annotate("text", x = 4.5, y = 88, hjust = "left", family = f3, colour = "grey5", size = 3,
           label = paste0("Overall Average: ", round(mean(df_who$avg_dr_rating),2))) +
  annotate("curve", x = 4.5, y = 87.9, xend = 4.8, yend = 84.2, colour = "grey5",
           curvature = -.3, arrow = arrow(length = unit(2, "mm"))) +
  annotate("text", x = 2.5, y = 79.9, hjust = "right", family = f3, colour = "grey5",
           label = "Average Per Doctor", size = 3) +
  annotate("curve", x = 2.5, y = 80, xend = 1.2, yend = 82.2, colour = "grey5",
           curvature = .3, arrow = arrow(length = unit(2, "mm"))) +
  annotate("curve", x = 2.5, y = 80, xend = 3.8, yend = 82.2, colour = "grey5",
           curvature = -.3, arrow = arrow(length = unit(2, "mm"))) +
  scale_colour_manual(values = pal) +
  guides(colour = "none") +
  scale_y_continuous(limits = c(75, 95)) +
  labs(title = "Doctor Who...was the most popular?",
       subtitle = "Dr Who episodes IMDB rating by Doctor, scale out of 100",
       caption = "Source: datardis package | Graphic: Andrew Moles",
       x = "", y = "IMDB Rating") +
  coord_flip() +
  theme(text = element_text(family = f3),
        plot.title.position = "plot",
        plot.title = element_text(size = 20, face = "bold", family = f3),
        plot.subtitle = element_text(size = 14, family = f3),
        plot.caption = element_text(size = 10, face = "italic"),
        axis.text = element_text(size = 11),
        plot.background = element_rect(fill = "grey95"),
        panel.background = element_rect(fill = "grey95"),
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.major.x = element_line(colour = "grey80"),
        panel.grid.minor = element_line(colour = "grey80"),
        axis.ticks = element_blank()) -> dr_w

css_default_hover <- girafe_css_bicolor(primary = "#E2DBAA", secondary = "#ABB3E2")
set_girafe_defaults(opts_hover = opts_hover(css = css_default_hover))

girafe(ggobj = dr_w, fonts = list("Arial"), 
       options = list(opts_toolbar(position = "bottom")))
```


Below is an example of using the [http://quanteda.io/](Quanteda) package for text analysis, which is developed here at LSE by Ken Benoit. It is a visualisation to show how readable inaugural speeches from presidents have been since 1945. A higher score means the text used in the speech more readable.

```{r quanteda, message=FALSE, warning=FALSE}
#| code-fold: true
#| code-summary: "Show the code"
#| out-width: '100%'

# load libraries
library(quanteda)
library(quanteda.textstats)
library(ggplot2)

# prepare data
inaugural_readability <- data_corpus_inaugural %>%
    corpus_subset(Year > 1945) %>% 
    textstat_readability(measure = c("Flesch"))

# calculate readability
avg_readability <- mean(inaugural_readability$Flesch)

# text and point colours
point_col <- "black"
text_col <- "white"

# make visual
ggplot(inaugural_readability, 
       aes(x = document, y = Flesch)) +
  geom_point(size = 6.5, colour = point_col) +
  geom_hline(yintercept = avg_readability,
             alpha = 0.75, linetype = 5, linewidth = 1.2) +
  geom_segment(aes(xend = document, yend = avg_readability),
               linetype = 3, linewidth = 1.2) +
  geom_text(aes(label = round(Flesch, 1)), 
            colour = text_col, size = 2.5, family = "Avenir") +
  annotate(geom = "text", x = "2005-Bush", y = 69,
           family = "Avenir", size = 4,
           label = paste0("Average readability: ", round(avg_readability,2))) +
  annotate(geom = "curve",x = 14.5, y = 66, alpha = 0.6,
           xend = "2005-Bush", yend = avg_readability+0.4,
           curvature = -0.35, arrow = arrow(length = unit(0.15, "inches"))) +
  coord_flip() +
    labs(x = NULL, y = "Readability (Flesch)",
         title = "Readability of inaugural speeches since 1945",
         subtitle = "Higher score means text is more readable") +
  theme_minimal(base_family = "Avenir") +
  theme(plot.title.position = "plot")

```



